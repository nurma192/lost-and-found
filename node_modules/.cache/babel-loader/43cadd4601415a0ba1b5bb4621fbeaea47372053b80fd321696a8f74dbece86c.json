{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { ErrorKind } from './error';\nimport { Parser } from './parser';\nimport { isDateElement, isDateTimeSkeleton, isNumberElement, isNumberSkeleton, isPluralElement, isSelectElement, isTagElement, isTimeElement } from './types';\nfunction pruneLocation(els) {\n  els.forEach(function (el) {\n    delete el.location;\n    if (isSelectElement(el) || isPluralElement(el)) {\n      for (var k in el.options) {\n        delete el.options[k].location;\n        pruneLocation(el.options[k].value);\n      }\n    } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {\n      delete el.style.location;\n    } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {\n      delete el.style.location;\n    } else if (isTagElement(el)) {\n      pruneLocation(el.children);\n    }\n  });\n}\nexport function parse(message, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  opts = __assign({\n    shouldParseSkeletons: true,\n    requiresOtherClause: true\n  }, opts);\n  var result = new Parser(message, opts).parse();\n  if (result.err) {\n    var error = SyntaxError(ErrorKind[result.err.kind]);\n    // @ts-expect-error Assign to error object\n    error.location = result.err.location;\n    // @ts-expect-error Assign to error object\n    error.originalMessage = result.err.message;\n    throw error;\n  }\n  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {\n    pruneLocation(result.val);\n  }\n  return result.val;\n}\nexport * from './types';\n// only for testing\nexport var _Parser = Parser;","map":{"version":3,"names":["ErrorKind","Parser","isDateElement","isDateTimeSkeleton","isNumberElement","isNumberSkeleton","isPluralElement","isSelectElement","isTagElement","isTimeElement","pruneLocation","els","forEach","el","location","k","options","value","style","children","parse","message","opts","__assign","shouldParseSkeletons","requiresOtherClause","result","err","error","SyntaxError","kind","originalMessage","captureLocation","val","_Parser"],"sources":["../index.ts"],"sourcesContent":[null],"mappings":";AAAA,SAAQA,SAAS,QAAO,SAAS;AACjC,SAAQC,MAAM,QAAsB,UAAU;AAC9C,SACEC,aAAa,EACbC,kBAAkB,EAClBC,eAAe,EACfC,gBAAgB,EAChBC,eAAe,EACfC,eAAe,EACfC,YAAY,EACZC,aAAa,QAER,SAAS;AAEhB,SAASC,aAAaA,CAACC,GAA2B;EAChDA,GAAG,CAACC,OAAO,CAAC,UAAAC,EAAE;IACZ,OAAOA,EAAE,CAACC,QAAQ;IAClB,IAAIP,eAAe,CAACM,EAAE,CAAC,IAAIP,eAAe,CAACO,EAAE,CAAC,EAAE;MAC9C,KAAK,IAAME,CAAC,IAAIF,EAAE,CAACG,OAAO,EAAE;QAC1B,OAAOH,EAAE,CAACG,OAAO,CAACD,CAAC,CAAC,CAACD,QAAQ;QAC7BJ,aAAa,CAACG,EAAE,CAACG,OAAO,CAACD,CAAC,CAAC,CAACE,KAAK,CAAC;MACpC;IACF,CAAC,MAAM,IAAIb,eAAe,CAACS,EAAE,CAAC,IAAIR,gBAAgB,CAACQ,EAAE,CAACK,KAAK,CAAC,EAAE;MAC5D,OAAOL,EAAE,CAACK,KAAK,CAACJ,QAAQ;IAC1B,CAAC,MAAM,IACL,CAACZ,aAAa,CAACW,EAAE,CAAC,IAAIJ,aAAa,CAACI,EAAE,CAAC,KACvCV,kBAAkB,CAACU,EAAE,CAACK,KAAK,CAAC,EAC5B;MACA,OAAOL,EAAE,CAACK,KAAK,CAACJ,QAAQ;IAC1B,CAAC,MAAM,IAAIN,YAAY,CAACK,EAAE,CAAC,EAAE;MAC3BH,aAAa,CAACG,EAAE,CAACM,QAAQ,CAAC;IAC5B;EACF,CAAC,CAAC;AACJ;AAEA,OAAM,SAAUC,KAAKA,CAACC,OAAe,EAAEC,IAAwB;EAAxB,IAAAA,IAAA;IAAAA,IAAA,KAAwB;EAAA;EAC7DA,IAAI,GAAAC,QAAA;IACFC,oBAAoB,EAAE,IAAI;IAC1BC,mBAAmB,EAAE;EAAI,GACtBH,IAAI,CACR;EACD,IAAMI,MAAM,GAAG,IAAIzB,MAAM,CAACoB,OAAO,EAAEC,IAAI,CAAC,CAACF,KAAK,EAAE;EAChD,IAAIM,MAAM,CAACC,GAAG,EAAE;IACd,IAAMC,KAAK,GAAGC,WAAW,CAAC7B,SAAS,CAAC0B,MAAM,CAACC,GAAG,CAACG,IAAI,CAAC,CAAC;IACrD;IACAF,KAAK,CAACd,QAAQ,GAAGY,MAAM,CAACC,GAAG,CAACb,QAAQ;IACpC;IACAc,KAAK,CAACG,eAAe,GAAGL,MAAM,CAACC,GAAG,CAACN,OAAO;IAC1C,MAAMO,KAAK;EACb;EAEA,IAAI,EAACN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,eAAe,GAAE;IAC1BtB,aAAa,CAACgB,MAAM,CAACO,GAAG,CAAC;EAC3B;EACA,OAAOP,MAAM,CAACO,GAAG;AACnB;AAEA,cAAc,SAAS;AACvB;AACA,OAAO,IAAMC,OAAO,GAAGjC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}