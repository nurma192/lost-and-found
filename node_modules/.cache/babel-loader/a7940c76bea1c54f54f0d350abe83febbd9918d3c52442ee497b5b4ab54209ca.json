{"ast":null,"code":"import { isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTagElement, isTimeElement } from '@formatjs/icu-messageformat-parser';\nimport { ErrorCode, FormatError, InvalidValueError, InvalidValueTypeError, MissingValueError } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n  PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n  PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n  if (parts.length < 2) {\n    return parts;\n  }\n  return parts.reduce(function (all, part) {\n    var lastPart = all[all.length - 1];\n    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {\n      all.push(part);\n    } else {\n      lastPart.value += part.value;\n    }\n    return all;\n  }, []);\n}\nexport function isFormatXMLElementFn(el) {\n  return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue,\n// For debugging\noriginalMessage) {\n  // Hot path for straight simple msg translations\n  if (els.length === 1 && isLiteralElement(els[0])) {\n    return [{\n      type: PART_TYPE.literal,\n      value: els[0].value\n    }];\n  }\n  var result = [];\n  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n    var el = els_1[_i];\n    // Exit early for string parts.\n    if (isLiteralElement(el)) {\n      result.push({\n        type: PART_TYPE.literal,\n        value: el.value\n      });\n      continue;\n    }\n    // TODO: should this part be literal type?\n    // Replace `#` in plural rules with the actual numeric value.\n    if (isPoundElement(el)) {\n      if (typeof currentPluralValue === 'number') {\n        result.push({\n          type: PART_TYPE.literal,\n          value: formatters.getNumberFormat(locales).format(currentPluralValue)\n        });\n      }\n      continue;\n    }\n    var varName = el.value;\n    // Enforce that all required values are provided by the caller.\n    if (!(values && varName in values)) {\n      throw new MissingValueError(varName, originalMessage);\n    }\n    var value = values[varName];\n    if (isArgumentElement(el)) {\n      if (!value || typeof value === 'string' || typeof value === 'number') {\n        value = typeof value === 'string' || typeof value === 'number' ? String(value) : '';\n      }\n      result.push({\n        type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n        value: value\n      });\n      continue;\n    }\n    // Recursively format plural and select parts' option â€” which can be a\n    // nested pattern structure. The choosing of the option to use is\n    // abstracted-by and delegated-to the part helper object.\n    if (isDateElement(el)) {\n      var style = typeof el.style === 'string' ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : undefined;\n      result.push({\n        type: PART_TYPE.literal,\n        value: formatters.getDateTimeFormat(locales, style).format(value)\n      });\n      continue;\n    }\n    if (isTimeElement(el)) {\n      var style = typeof el.style === 'string' ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : formats.time.medium;\n      result.push({\n        type: PART_TYPE.literal,\n        value: formatters.getDateTimeFormat(locales, style).format(value)\n      });\n      continue;\n    }\n    if (isNumberElement(el)) {\n      var style = typeof el.style === 'string' ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : undefined;\n      if (style && style.scale) {\n        value = value * (style.scale || 1);\n      }\n      result.push({\n        type: PART_TYPE.literal,\n        value: formatters.getNumberFormat(locales, style).format(value)\n      });\n      continue;\n    }\n    if (isTagElement(el)) {\n      var children = el.children,\n        value_1 = el.value;\n      var formatFn = values[value_1];\n      if (!isFormatXMLElementFn(formatFn)) {\n        throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n      }\n      var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n      var chunks = formatFn(parts.map(function (p) {\n        return p.value;\n      }));\n      if (!Array.isArray(chunks)) {\n        chunks = [chunks];\n      }\n      result.push.apply(result, chunks.map(function (c) {\n        return {\n          type: typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n          value: c\n        };\n      }));\n    }\n    if (isSelectElement(el)) {\n      var opt = el.options[value] || el.options.other;\n      if (!opt) {\n        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n      }\n      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n      continue;\n    }\n    if (isPluralElement(el)) {\n      var opt = el.options[\"=\".concat(value)];\n      if (!opt) {\n        if (!Intl.PluralRules) {\n          throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API, originalMessage);\n        }\n        var rule = formatters.getPluralRules(locales, {\n          type: el.pluralType\n        }).select(value - (el.offset || 0));\n        opt = el.options[rule] || el.options.other;\n      }\n      if (!opt) {\n        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n      }\n      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n      continue;\n    }\n  }\n  return mergeLiteral(result);\n}","map":{"version":3,"names":["isArgumentElement","isDateElement","isDateTimeSkeleton","isLiteralElement","isNumberElement","isNumberSkeleton","isPluralElement","isPoundElement","isSelectElement","isTagElement","isTimeElement","ErrorCode","FormatError","InvalidValueError","InvalidValueTypeError","MissingValueError","PART_TYPE","mergeLiteral","parts","length","reduce","all","part","lastPart","type","literal","push","value","isFormatXMLElementFn","el","formatToParts","els","locales","formatters","formats","values","currentPluralValue","originalMessage","result","_i","els_1","getNumberFormat","format","varName","String","object","style","date","parsedOptions","undefined","getDateTimeFormat","time","medium","number","scale","children","value_1","formatFn","chunks","map","p","Array","isArray","apply","c","opt","options","other","Object","keys","concat","Intl","PluralRules","MISSING_INTL_API","rule","getPluralRules","pluralType","select","offset"],"sources":["../../src/formatters.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}