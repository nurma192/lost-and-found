{"ast":null,"code":"var _a;\nimport { __assign } from \"tslib\";\nimport { ErrorKind } from './error';\nimport { SKELETON_TYPE, TYPE } from './types';\nimport { SPACE_SEPARATOR_REGEX } from './regex.generated';\nimport { parseNumberSkeleton, parseNumberSkeletonFromString, parseDateTimeSkeleton } from '@formatjs/icu-skeleton-parser';\nimport { getBestPattern } from './date-time-pattern-generator';\nvar SPACE_SEPARATOR_START_REGEX = new RegExp(\"^\".concat(SPACE_SEPARATOR_REGEX.source, \"*\"));\nvar SPACE_SEPARATOR_END_REGEX = new RegExp(\"\".concat(SPACE_SEPARATOR_REGEX.source, \"*$\"));\nfunction createLocation(start, end) {\n  return {\n    start: start,\n    end: end\n  };\n}\n// #region Ponyfills\n// Consolidate these variables up top for easier toggling during debugging\nvar hasNativeStartsWith = !!String.prototype.startsWith && '_a'.startsWith('a', 1);\nvar hasNativeFromCodePoint = !!String.fromCodePoint;\nvar hasNativeFromEntries = !!Object.fromEntries;\nvar hasNativeCodePointAt = !!String.prototype.codePointAt;\nvar hasTrimStart = !!String.prototype.trimStart;\nvar hasTrimEnd = !!String.prototype.trimEnd;\nvar hasNativeIsSafeInteger = !!Number.isSafeInteger;\nvar isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function (n) {\n  return typeof n === 'number' && isFinite(n) && Math.floor(n) === n && Math.abs(n) <= 0x1fffffffffffff;\n};\n// IE11 does not support y and u.\nvar REGEX_SUPPORTS_U_AND_Y = true;\ntry {\n  var re = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n  /**\n   * legacy Edge or Xbox One browser\n   * Unicode flag support: supported\n   * Pattern_Syntax support: not supported\n   * See https://github.com/formatjs/formatjs/issues/2822\n   */\n  REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';\n} catch (_) {\n  REGEX_SUPPORTS_U_AND_Y = false;\n}\nvar startsWith = hasNativeStartsWith ?\n// Native\nfunction startsWith(s, search, position) {\n  return s.startsWith(search, position);\n} :\n// For IE11\nfunction startsWith(s, search, position) {\n  return s.slice(position, position + search.length) === search;\n};\nvar fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint :\n// IE11\nfunction fromCodePoint() {\n  var codePoints = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    codePoints[_i] = arguments[_i];\n  }\n  var elements = '';\n  var length = codePoints.length;\n  var i = 0;\n  var code;\n  while (length > i) {\n    code = codePoints[i++];\n    if (code > 0x10ffff) throw RangeError(code + ' is not a valid code point');\n    elements += code < 0x10000 ? String.fromCharCode(code) : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00);\n  }\n  return elements;\n};\nvar fromEntries =\n// native\nhasNativeFromEntries ? Object.fromEntries :\n// Ponyfill\nfunction fromEntries(entries) {\n  var obj = {};\n  for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n    var _a = entries_1[_i],\n      k = _a[0],\n      v = _a[1];\n    obj[k] = v;\n  }\n  return obj;\n};\nvar codePointAt = hasNativeCodePointAt ?\n// Native\nfunction codePointAt(s, index) {\n  return s.codePointAt(index);\n} :\n// IE 11\nfunction codePointAt(s, index) {\n  var size = s.length;\n  if (index < 0 || index >= size) {\n    return undefined;\n  }\n  var first = s.charCodeAt(index);\n  var second;\n  return first < 0xd800 || first > 0xdbff || index + 1 === size || (second = s.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? first : (first - 0xd800 << 10) + (second - 0xdc00) + 0x10000;\n};\nvar trimStart = hasTrimStart ?\n// Native\nfunction trimStart(s) {\n  return s.trimStart();\n} :\n// Ponyfill\nfunction trimStart(s) {\n  return s.replace(SPACE_SEPARATOR_START_REGEX, '');\n};\nvar trimEnd = hasTrimEnd ?\n// Native\nfunction trimEnd(s) {\n  return s.trimEnd();\n} :\n// Ponyfill\nfunction trimEnd(s) {\n  return s.replace(SPACE_SEPARATOR_END_REGEX, '');\n};\n// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.\nfunction RE(s, flag) {\n  return new RegExp(s, flag);\n}\n// #endregion\nvar matchIdentifierAtIndex;\nif (REGEX_SUPPORTS_U_AND_Y) {\n  // Native\n  var IDENTIFIER_PREFIX_RE_1 = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n  matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n    var _a;\n    IDENTIFIER_PREFIX_RE_1.lastIndex = index;\n    var match = IDENTIFIER_PREFIX_RE_1.exec(s);\n    return (_a = match[1]) !== null && _a !== void 0 ? _a : '';\n  };\n} else {\n  // IE11\n  matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n    var match = [];\n    while (true) {\n      var c = codePointAt(s, index);\n      if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {\n        break;\n      }\n      match.push(c);\n      index += c >= 0x10000 ? 2 : 1;\n    }\n    return fromCodePoint.apply(void 0, match);\n  };\n}\nvar Parser = /** @class */function () {\n  function Parser(message, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.message = message;\n    this.position = {\n      offset: 0,\n      line: 1,\n      column: 1\n    };\n    this.ignoreTag = !!options.ignoreTag;\n    this.locale = options.locale;\n    this.requiresOtherClause = !!options.requiresOtherClause;\n    this.shouldParseSkeletons = !!options.shouldParseSkeletons;\n  }\n  Parser.prototype.parse = function () {\n    if (this.offset() !== 0) {\n      throw Error('parser can only be used once');\n    }\n    return this.parseMessage(0, '', false);\n  };\n  Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {\n    var elements = [];\n    while (!this.isEOF()) {\n      var char = this.char();\n      if (char === 123 /* `{` */) {\n        var result = this.parseArgument(nestingLevel, expectingCloseTag);\n        if (result.err) {\n          return result;\n        }\n        elements.push(result.val);\n      } else if (char === 125 /* `}` */ && nestingLevel > 0) {\n        break;\n      } else if (char === 35 /* `#` */ && (parentArgType === 'plural' || parentArgType === 'selectordinal')) {\n        var position = this.clonePosition();\n        this.bump();\n        elements.push({\n          type: TYPE.pound,\n          location: createLocation(position, this.clonePosition())\n        });\n      } else if (char === 60 /* `<` */ && !this.ignoreTag && this.peek() === 47 // char code for '/'\n      ) {\n        if (expectingCloseTag) {\n          break;\n        } else {\n          return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n      } else if (char === 60 /* `<` */ && !this.ignoreTag && _isAlpha(this.peek() || 0)) {\n        var result = this.parseTag(nestingLevel, parentArgType);\n        if (result.err) {\n          return result;\n        }\n        elements.push(result.val);\n      } else {\n        var result = this.parseLiteral(nestingLevel, parentArgType);\n        if (result.err) {\n          return result;\n        }\n        elements.push(result.val);\n      }\n    }\n    return {\n      val: elements,\n      err: null\n    };\n  };\n  /**\n   * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the\n   * [custom element name][] except that a dash is NOT always mandatory and uppercase letters\n   * are accepted:\n   *\n   * ```\n   * tag ::= \"<\" tagName (whitespace)* \"/>\" | \"<\" tagName (whitespace)* \">\" message \"</\" tagName (whitespace)* \">\"\n   * tagName ::= [a-z] (PENChar)*\n   * PENChar ::=\n   *     \"-\" | \".\" | [0-9] | \"_\" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |\n   *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |\n   *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n   * ```\n   *\n   * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n   * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do\n   * since other tag-based engines like React allow it\n   */\n  Parser.prototype.parseTag = function (nestingLevel, parentArgType) {\n    var startPosition = this.clonePosition();\n    this.bump(); // `<`\n    var tagName = this.parseTagName();\n    this.bumpSpace();\n    if (this.bumpIf('/>')) {\n      // Self closing tag\n      return {\n        val: {\n          type: TYPE.literal,\n          value: \"<\".concat(tagName, \"/>\"),\n          location: createLocation(startPosition, this.clonePosition())\n        },\n        err: null\n      };\n    } else if (this.bumpIf('>')) {\n      var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\n      if (childrenResult.err) {\n        return childrenResult;\n      }\n      var children = childrenResult.val;\n      // Expecting a close tag\n      var endTagStartPosition = this.clonePosition();\n      if (this.bumpIf('</')) {\n        if (this.isEOF() || !_isAlpha(this.char())) {\n          return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n        }\n        var closingTagNameStartPosition = this.clonePosition();\n        var closingTagName = this.parseTagName();\n        if (tagName !== closingTagName) {\n          return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\n        }\n        this.bumpSpace();\n        if (!this.bumpIf('>')) {\n          return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n        }\n        return {\n          val: {\n            type: TYPE.tag,\n            value: tagName,\n            children: children,\n            location: createLocation(startPosition, this.clonePosition())\n          },\n          err: null\n        };\n      } else {\n        return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\n      }\n    } else {\n      return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\n    }\n  };\n  /**\n   * This method assumes that the caller has peeked ahead for the first tag character.\n   */\n  Parser.prototype.parseTagName = function () {\n    var startOffset = this.offset();\n    this.bump(); // the first tag name character\n    while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\n      this.bump();\n    }\n    return this.message.slice(startOffset, this.offset());\n  };\n  Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {\n    var start = this.clonePosition();\n    var value = '';\n    while (true) {\n      var parseQuoteResult = this.tryParseQuote(parentArgType);\n      if (parseQuoteResult) {\n        value += parseQuoteResult;\n        continue;\n      }\n      var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\n      if (parseUnquotedResult) {\n        value += parseUnquotedResult;\n        continue;\n      }\n      var parseLeftAngleResult = this.tryParseLeftAngleBracket();\n      if (parseLeftAngleResult) {\n        value += parseLeftAngleResult;\n        continue;\n      }\n      break;\n    }\n    var location = createLocation(start, this.clonePosition());\n    return {\n      val: {\n        type: TYPE.literal,\n        value: value,\n        location: location\n      },\n      err: null\n    };\n  };\n  Parser.prototype.tryParseLeftAngleBracket = function () {\n    if (!this.isEOF() && this.char() === 60 /* `<` */ && (this.ignoreTag ||\n    // If at the opening tag or closing tag position, bail.\n    !_isAlphaOrSlash(this.peek() || 0))) {\n      this.bump(); // `<`\n      return '<';\n    }\n    return null;\n  };\n  /**\n   * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes\n   * a character that requires quoting (that is, \"only where needed\"), and works the same in\n   * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.\n   */\n  Parser.prototype.tryParseQuote = function (parentArgType) {\n    if (this.isEOF() || this.char() !== 39 /* `'` */) {\n      return null;\n    }\n    // Parse escaped char following the apostrophe, or early return if there is no escaped char.\n    // Check if is valid escaped character\n    switch (this.peek()) {\n      case 39 /* `'` */:\n        // double quote, should return as a single quote.\n        this.bump();\n        this.bump();\n        return \"'\";\n      // '{', '<', '>', '}'\n      case 123:\n      case 60:\n      case 62:\n      case 125:\n        break;\n      case 35:\n        // '#'\n        if (parentArgType === 'plural' || parentArgType === 'selectordinal') {\n          break;\n        }\n        return null;\n      default:\n        return null;\n    }\n    this.bump(); // apostrophe\n    var codePoints = [this.char()]; // escaped char\n    this.bump();\n    // read chars until the optional closing apostrophe is found\n    while (!this.isEOF()) {\n      var ch = this.char();\n      if (ch === 39 /* `'` */) {\n        if (this.peek() === 39 /* `'` */) {\n          codePoints.push(39);\n          // Bump one more time because we need to skip 2 characters.\n          this.bump();\n        } else {\n          // Optional closing apostrophe.\n          this.bump();\n          break;\n        }\n      } else {\n        codePoints.push(ch);\n      }\n      this.bump();\n    }\n    return fromCodePoint.apply(void 0, codePoints);\n  };\n  Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {\n    if (this.isEOF()) {\n      return null;\n    }\n    var ch = this.char();\n    if (ch === 60 /* `<` */ || ch === 123 /* `{` */ || ch === 35 /* `#` */ && (parentArgType === 'plural' || parentArgType === 'selectordinal') || ch === 125 /* `}` */ && nestingLevel > 0) {\n      return null;\n    } else {\n      this.bump();\n      return fromCodePoint(ch);\n    }\n  };\n  Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {\n    var openingBracePosition = this.clonePosition();\n    this.bump(); // `{`\n    this.bumpSpace();\n    if (this.isEOF()) {\n      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    if (this.char() === 125 /* `}` */) {\n      this.bump();\n      return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    // argument name\n    var value = this.parseIdentifierIfPossible().value;\n    if (!value) {\n      return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    this.bumpSpace();\n    if (this.isEOF()) {\n      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    switch (this.char()) {\n      // Simple argument: `{name}`\n      case 125 /* `}` */:\n        {\n          this.bump(); // `}`\n          return {\n            val: {\n              type: TYPE.argument,\n              // value does not include the opening and closing braces.\n              value: value,\n              location: createLocation(openingBracePosition, this.clonePosition())\n            },\n            err: null\n          };\n        }\n      // Argument with options: `{name, format, ...}`\n      case 44 /* `,` */:\n        {\n          this.bump(); // `,`\n          this.bumpSpace();\n          if (this.isEOF()) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n          }\n          return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\n        }\n      default:\n        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n    }\n  };\n  /**\n   * Advance the parser until the end of the identifier, if it is currently on\n   * an identifier character. Return an empty string otherwise.\n   */\n  Parser.prototype.parseIdentifierIfPossible = function () {\n    var startingPosition = this.clonePosition();\n    var startOffset = this.offset();\n    var value = matchIdentifierAtIndex(this.message, startOffset);\n    var endOffset = startOffset + value.length;\n    this.bumpTo(endOffset);\n    var endPosition = this.clonePosition();\n    var location = createLocation(startingPosition, endPosition);\n    return {\n      value: value,\n      location: location\n    };\n  };\n  Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {\n    var _a;\n    // Parse this range:\n    // {name, type, style}\n    //        ^---^\n    var typeStartPosition = this.clonePosition();\n    var argType = this.parseIdentifierIfPossible().value;\n    var typeEndPosition = this.clonePosition();\n    switch (argType) {\n      case '':\n        // Expecting a style string number, date, time, plural, selectordinal, or select.\n        return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n      case 'number':\n      case 'date':\n      case 'time':\n        {\n          // Parse this range:\n          // {name, number, style}\n          //              ^-------^\n          this.bumpSpace();\n          var styleAndLocation = null;\n          if (this.bumpIf(',')) {\n            this.bumpSpace();\n            var styleStartPosition = this.clonePosition();\n            var result = this.parseSimpleArgStyleIfPossible();\n            if (result.err) {\n              return result;\n            }\n            var style = trimEnd(result.val);\n            if (style.length === 0) {\n              return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\n            }\n            var styleLocation = createLocation(styleStartPosition, this.clonePosition());\n            styleAndLocation = {\n              style: style,\n              styleLocation: styleLocation\n            };\n          }\n          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n          if (argCloseResult.err) {\n            return argCloseResult;\n          }\n          var location_1 = createLocation(openingBracePosition, this.clonePosition());\n          // Extract style or skeleton\n          if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {\n            // Skeleton starts with `::`.\n            var skeleton = trimStart(styleAndLocation.style.slice(2));\n            if (argType === 'number') {\n              var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\n              if (result.err) {\n                return result;\n              }\n              return {\n                val: {\n                  type: TYPE.number,\n                  value: value,\n                  location: location_1,\n                  style: result.val\n                },\n                err: null\n              };\n            } else {\n              if (skeleton.length === 0) {\n                return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\n              }\n              var dateTimePattern = skeleton;\n              // Get \"best match\" pattern only if locale is passed, if not, let it\n              // pass as-is where `parseDateTimeSkeleton()` will throw an error\n              // for unsupported patterns.\n              if (this.locale) {\n                dateTimePattern = getBestPattern(skeleton, this.locale);\n              }\n              var style = {\n                type: SKELETON_TYPE.dateTime,\n                pattern: dateTimePattern,\n                location: styleAndLocation.styleLocation,\n                parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(dateTimePattern) : {}\n              };\n              var type = argType === 'date' ? TYPE.date : TYPE.time;\n              return {\n                val: {\n                  type: type,\n                  value: value,\n                  location: location_1,\n                  style: style\n                },\n                err: null\n              };\n            }\n          }\n          // Regular style or no style.\n          return {\n            val: {\n              type: argType === 'number' ? TYPE.number : argType === 'date' ? TYPE.date : TYPE.time,\n              value: value,\n              location: location_1,\n              style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null\n            },\n            err: null\n          };\n        }\n      case 'plural':\n      case 'selectordinal':\n      case 'select':\n        {\n          // Parse this range:\n          // {name, plural, options}\n          //              ^---------^\n          var typeEndPosition_1 = this.clonePosition();\n          this.bumpSpace();\n          if (!this.bumpIf(',')) {\n            return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));\n          }\n          this.bumpSpace();\n          // Parse offset:\n          // {name, plural, offset:1, options}\n          //                ^-----^\n          //\n          // or the first option:\n          //\n          // {name, plural, one {...} other {...}}\n          //                ^--^\n          var identifierAndLocation = this.parseIdentifierIfPossible();\n          var pluralOffset = 0;\n          if (argType !== 'select' && identifierAndLocation.value === 'offset') {\n            if (!this.bumpIf(':')) {\n              return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\n            }\n            this.bumpSpace();\n            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\n            if (result.err) {\n              return result;\n            }\n            // Parse another identifier for option parsing\n            this.bumpSpace();\n            identifierAndLocation = this.parseIdentifierIfPossible();\n            pluralOffset = result.val;\n          }\n          var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\n          if (optionsResult.err) {\n            return optionsResult;\n          }\n          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n          if (argCloseResult.err) {\n            return argCloseResult;\n          }\n          var location_2 = createLocation(openingBracePosition, this.clonePosition());\n          if (argType === 'select') {\n            return {\n              val: {\n                type: TYPE.select,\n                value: value,\n                options: fromEntries(optionsResult.val),\n                location: location_2\n              },\n              err: null\n            };\n          } else {\n            return {\n              val: {\n                type: TYPE.plural,\n                value: value,\n                options: fromEntries(optionsResult.val),\n                offset: pluralOffset,\n                pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',\n                location: location_2\n              },\n              err: null\n            };\n          }\n        }\n      default:\n        return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n    }\n  };\n  Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {\n    // Parse: {value, number, ::currency/GBP }\n    //\n    if (this.isEOF() || this.char() !== 125 /* `}` */) {\n      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    this.bump(); // `}`\n    return {\n      val: true,\n      err: null\n    };\n  };\n  /**\n   * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659\n   */\n  Parser.prototype.parseSimpleArgStyleIfPossible = function () {\n    var nestedBraces = 0;\n    var startPosition = this.clonePosition();\n    while (!this.isEOF()) {\n      var ch = this.char();\n      switch (ch) {\n        case 39 /* `'` */:\n          {\n            // Treat apostrophe as quoting but include it in the style part.\n            // Find the end of the quoted literal text.\n            this.bump();\n            var apostrophePosition = this.clonePosition();\n            if (!this.bumpUntil(\"'\")) {\n              return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\n            }\n            this.bump();\n            break;\n          }\n        case 123 /* `{` */:\n          {\n            nestedBraces += 1;\n            this.bump();\n            break;\n          }\n        case 125 /* `}` */:\n          {\n            if (nestedBraces > 0) {\n              nestedBraces -= 1;\n            } else {\n              return {\n                val: this.message.slice(startPosition.offset, this.offset()),\n                err: null\n              };\n            }\n            break;\n          }\n        default:\n          this.bump();\n          break;\n      }\n    }\n    return {\n      val: this.message.slice(startPosition.offset, this.offset()),\n      err: null\n    };\n  };\n  Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {\n    var tokens = [];\n    try {\n      tokens = parseNumberSkeletonFromString(skeleton);\n    } catch (e) {\n      return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);\n    }\n    return {\n      val: {\n        type: SKELETON_TYPE.number,\n        tokens: tokens,\n        location: location,\n        parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}\n      },\n      err: null\n    };\n  };\n  /**\n   * @param nesting_level The current nesting level of messages.\n   *     This can be positive when parsing message fragment in select or plural argument options.\n   * @param parent_arg_type The parent argument's type.\n   * @param parsed_first_identifier If provided, this is the first identifier-like selector of\n   *     the argument. It is a by-product of a previous parsing attempt.\n   * @param expecting_close_tag If true, this message is directly or indirectly nested inside\n   *     between a pair of opening and closing tags. The nested message will not parse beyond\n   *     the closing tag boundary.\n   */\n  Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\n    var _a;\n    var hasOtherClause = false;\n    var options = [];\n    var parsedSelectors = new Set();\n    var selector = parsedFirstIdentifier.value,\n      selectorLocation = parsedFirstIdentifier.location;\n    // Parse:\n    // one {one apple}\n    // ^--^\n    while (true) {\n      if (selector.length === 0) {\n        var startPosition = this.clonePosition();\n        if (parentArgType !== 'select' && this.bumpIf('=')) {\n          // Try parse `={number}` selector\n          var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\n          if (result.err) {\n            return result;\n          }\n          selectorLocation = createLocation(startPosition, this.clonePosition());\n          selector = this.message.slice(startPosition.offset, this.offset());\n        } else {\n          break;\n        }\n      }\n      // Duplicate selector clauses\n      if (parsedSelectors.has(selector)) {\n        return this.error(parentArgType === 'select' ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\n      }\n      if (selector === 'other') {\n        hasOtherClause = true;\n      }\n      // Parse:\n      // one {one apple}\n      //     ^----------^\n      this.bumpSpace();\n      var openingBracePosition = this.clonePosition();\n      if (!this.bumpIf('{')) {\n        return this.error(parentArgType === 'select' ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\n      }\n      var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\n      if (fragmentResult.err) {\n        return fragmentResult;\n      }\n      var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n      if (argCloseResult.err) {\n        return argCloseResult;\n      }\n      options.push([selector, {\n        value: fragmentResult.val,\n        location: createLocation(openingBracePosition, this.clonePosition())\n      }]);\n      // Keep track of the existing selectors\n      parsedSelectors.add(selector);\n      // Prep next selector clause.\n      this.bumpSpace();\n      _a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location;\n    }\n    if (options.length === 0) {\n      return this.error(parentArgType === 'select' ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\n    }\n    if (this.requiresOtherClause && !hasOtherClause) {\n      return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\n    }\n    return {\n      val: options,\n      err: null\n    };\n  };\n  Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {\n    var sign = 1;\n    var startingPosition = this.clonePosition();\n    if (this.bumpIf('+')) {} else if (this.bumpIf('-')) {\n      sign = -1;\n    }\n    var hasDigits = false;\n    var decimal = 0;\n    while (!this.isEOF()) {\n      var ch = this.char();\n      if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {\n        hasDigits = true;\n        decimal = decimal * 10 + (ch - 48);\n        this.bump();\n      } else {\n        break;\n      }\n    }\n    var location = createLocation(startingPosition, this.clonePosition());\n    if (!hasDigits) {\n      return this.error(expectNumberError, location);\n    }\n    decimal *= sign;\n    if (!isSafeInteger(decimal)) {\n      return this.error(invalidNumberError, location);\n    }\n    return {\n      val: decimal,\n      err: null\n    };\n  };\n  Parser.prototype.offset = function () {\n    return this.position.offset;\n  };\n  Parser.prototype.isEOF = function () {\n    return this.offset() === this.message.length;\n  };\n  Parser.prototype.clonePosition = function () {\n    // This is much faster than `Object.assign` or spread.\n    return {\n      offset: this.position.offset,\n      line: this.position.line,\n      column: this.position.column\n    };\n  };\n  /**\n   * Return the code point at the current position of the parser.\n   * Throws if the index is out of bound.\n   */\n  Parser.prototype.char = function () {\n    var offset = this.position.offset;\n    if (offset >= this.message.length) {\n      throw Error('out of bound');\n    }\n    var code = codePointAt(this.message, offset);\n    if (code === undefined) {\n      throw Error(\"Offset \".concat(offset, \" is at invalid UTF-16 code unit boundary\"));\n    }\n    return code;\n  };\n  Parser.prototype.error = function (kind, location) {\n    return {\n      val: null,\n      err: {\n        kind: kind,\n        message: this.message,\n        location: location\n      }\n    };\n  };\n  /** Bump the parser to the next UTF-16 code unit. */\n  Parser.prototype.bump = function () {\n    if (this.isEOF()) {\n      return;\n    }\n    var code = this.char();\n    if (code === 10 /* '\\n' */) {\n      this.position.line += 1;\n      this.position.column = 1;\n      this.position.offset += 1;\n    } else {\n      this.position.column += 1;\n      // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.\n      this.position.offset += code < 0x10000 ? 1 : 2;\n    }\n  };\n  /**\n   * If the substring starting at the current position of the parser has\n   * the given prefix, then bump the parser to the character immediately\n   * following the prefix and return true. Otherwise, don't bump the parser\n   * and return false.\n   */\n  Parser.prototype.bumpIf = function (prefix) {\n    if (startsWith(this.message, prefix, this.offset())) {\n      for (var i = 0; i < prefix.length; i++) {\n        this.bump();\n      }\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Bump the parser until the pattern character is found and return `true`.\n   * Otherwise bump to the end of the file and return `false`.\n   */\n  Parser.prototype.bumpUntil = function (pattern) {\n    var currentOffset = this.offset();\n    var index = this.message.indexOf(pattern, currentOffset);\n    if (index >= 0) {\n      this.bumpTo(index);\n      return true;\n    } else {\n      this.bumpTo(this.message.length);\n      return false;\n    }\n  };\n  /**\n   * Bump the parser to the target offset.\n   * If target offset is beyond the end of the input, bump the parser to the end of the input.\n   */\n  Parser.prototype.bumpTo = function (targetOffset) {\n    if (this.offset() > targetOffset) {\n      throw Error(\"targetOffset \".concat(targetOffset, \" must be greater than or equal to the current offset \").concat(this.offset()));\n    }\n    targetOffset = Math.min(targetOffset, this.message.length);\n    while (true) {\n      var offset = this.offset();\n      if (offset === targetOffset) {\n        break;\n      }\n      if (offset > targetOffset) {\n        throw Error(\"targetOffset \".concat(targetOffset, \" is at invalid UTF-16 code unit boundary\"));\n      }\n      this.bump();\n      if (this.isEOF()) {\n        break;\n      }\n    }\n  };\n  /** advance the parser through all whitespace to the next non-whitespace code unit. */\n  Parser.prototype.bumpSpace = function () {\n    while (!this.isEOF() && _isWhiteSpace(this.char())) {\n      this.bump();\n    }\n  };\n  /**\n   * Peek at the *next* Unicode codepoint in the input without advancing the parser.\n   * If the input has been exhausted, then this returns null.\n   */\n  Parser.prototype.peek = function () {\n    if (this.isEOF()) {\n      return null;\n    }\n    var code = this.char();\n    var offset = this.offset();\n    var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));\n    return nextCode !== null && nextCode !== void 0 ? nextCode : null;\n  };\n  return Parser;\n}();\nexport { Parser };\n/**\n * This check if codepoint is alphabet (lower & uppercase)\n * @param codepoint\n * @returns\n */\nfunction _isAlpha(codepoint) {\n  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;\n}\nfunction _isAlphaOrSlash(codepoint) {\n  return _isAlpha(codepoint) || codepoint === 47; /* '/' */\n}\n/** See `parseTag` function docs. */\nfunction _isPotentialElementNameChar(c) {\n  return c === 45 /* '-' */ || c === 46 /* '.' */ || c >= 48 && c <= 57 /* 0..9 */ || c === 95 /* '_' */ || c >= 97 && c <= 122 /** a..z */ || c >= 65 && c <= 90 /* A..Z */ || c == 0xb7 || c >= 0xc0 && c <= 0xd6 || c >= 0xd8 && c <= 0xf6 || c >= 0xf8 && c <= 0x37d || c >= 0x37f && c <= 0x1fff || c >= 0x200c && c <= 0x200d || c >= 0x203f && c <= 0x2040 || c >= 0x2070 && c <= 0x218f || c >= 0x2c00 && c <= 0x2fef || c >= 0x3001 && c <= 0xd7ff || c >= 0xf900 && c <= 0xfdcf || c >= 0xfdf0 && c <= 0xfffd || c >= 0x10000 && c <= 0xeffff;\n}\n/**\n * Code point equivalent of regex `\\p{White_Space}`.\n * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isWhiteSpace(c) {\n  return c >= 0x0009 && c <= 0x000d || c === 0x0020 || c === 0x0085 || c >= 0x200e && c <= 0x200f || c === 0x2028 || c === 0x2029;\n}\n/**\n * Code point equivalent of regex `\\p{Pattern_Syntax}`.\n * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isPatternSyntax(c) {\n  return c >= 0x0021 && c <= 0x0023 || c === 0x0024 || c >= 0x0025 && c <= 0x0027 || c === 0x0028 || c === 0x0029 || c === 0x002a || c === 0x002b || c === 0x002c || c === 0x002d || c >= 0x002e && c <= 0x002f || c >= 0x003a && c <= 0x003b || c >= 0x003c && c <= 0x003e || c >= 0x003f && c <= 0x0040 || c === 0x005b || c === 0x005c || c === 0x005d || c === 0x005e || c === 0x0060 || c === 0x007b || c === 0x007c || c === 0x007d || c === 0x007e || c === 0x00a1 || c >= 0x00a2 && c <= 0x00a5 || c === 0x00a6 || c === 0x00a7 || c === 0x00a9 || c === 0x00ab || c === 0x00ac || c === 0x00ae || c === 0x00b0 || c === 0x00b1 || c === 0x00b6 || c === 0x00bb || c === 0x00bf || c === 0x00d7 || c === 0x00f7 || c >= 0x2010 && c <= 0x2015 || c >= 0x2016 && c <= 0x2017 || c === 0x2018 || c === 0x2019 || c === 0x201a || c >= 0x201b && c <= 0x201c || c === 0x201d || c === 0x201e || c === 0x201f || c >= 0x2020 && c <= 0x2027 || c >= 0x2030 && c <= 0x2038 || c === 0x2039 || c === 0x203a || c >= 0x203b && c <= 0x203e || c >= 0x2041 && c <= 0x2043 || c === 0x2044 || c === 0x2045 || c === 0x2046 || c >= 0x2047 && c <= 0x2051 || c === 0x2052 || c === 0x2053 || c >= 0x2055 && c <= 0x205e || c >= 0x2190 && c <= 0x2194 || c >= 0x2195 && c <= 0x2199 || c >= 0x219a && c <= 0x219b || c >= 0x219c && c <= 0x219f || c === 0x21a0 || c >= 0x21a1 && c <= 0x21a2 || c === 0x21a3 || c >= 0x21a4 && c <= 0x21a5 || c === 0x21a6 || c >= 0x21a7 && c <= 0x21ad || c === 0x21ae || c >= 0x21af && c <= 0x21cd || c >= 0x21ce && c <= 0x21cf || c >= 0x21d0 && c <= 0x21d1 || c === 0x21d2 || c === 0x21d3 || c === 0x21d4 || c >= 0x21d5 && c <= 0x21f3 || c >= 0x21f4 && c <= 0x22ff || c >= 0x2300 && c <= 0x2307 || c === 0x2308 || c === 0x2309 || c === 0x230a || c === 0x230b || c >= 0x230c && c <= 0x231f || c >= 0x2320 && c <= 0x2321 || c >= 0x2322 && c <= 0x2328 || c === 0x2329 || c === 0x232a || c >= 0x232b && c <= 0x237b || c === 0x237c || c >= 0x237d && c <= 0x239a || c >= 0x239b && c <= 0x23b3 || c >= 0x23b4 && c <= 0x23db || c >= 0x23dc && c <= 0x23e1 || c >= 0x23e2 && c <= 0x2426 || c >= 0x2427 && c <= 0x243f || c >= 0x2440 && c <= 0x244a || c >= 0x244b && c <= 0x245f || c >= 0x2500 && c <= 0x25b6 || c === 0x25b7 || c >= 0x25b8 && c <= 0x25c0 || c === 0x25c1 || c >= 0x25c2 && c <= 0x25f7 || c >= 0x25f8 && c <= 0x25ff || c >= 0x2600 && c <= 0x266e || c === 0x266f || c >= 0x2670 && c <= 0x2767 || c === 0x2768 || c === 0x2769 || c === 0x276a || c === 0x276b || c === 0x276c || c === 0x276d || c === 0x276e || c === 0x276f || c === 0x2770 || c === 0x2771 || c === 0x2772 || c === 0x2773 || c === 0x2774 || c === 0x2775 || c >= 0x2794 && c <= 0x27bf || c >= 0x27c0 && c <= 0x27c4 || c === 0x27c5 || c === 0x27c6 || c >= 0x27c7 && c <= 0x27e5 || c === 0x27e6 || c === 0x27e7 || c === 0x27e8 || c === 0x27e9 || c === 0x27ea || c === 0x27eb || c === 0x27ec || c === 0x27ed || c === 0x27ee || c === 0x27ef || c >= 0x27f0 && c <= 0x27ff || c >= 0x2800 && c <= 0x28ff || c >= 0x2900 && c <= 0x2982 || c === 0x2983 || c === 0x2984 || c === 0x2985 || c === 0x2986 || c === 0x2987 || c === 0x2988 || c === 0x2989 || c === 0x298a || c === 0x298b || c === 0x298c || c === 0x298d || c === 0x298e || c === 0x298f || c === 0x2990 || c === 0x2991 || c === 0x2992 || c === 0x2993 || c === 0x2994 || c === 0x2995 || c === 0x2996 || c === 0x2997 || c === 0x2998 || c >= 0x2999 && c <= 0x29d7 || c === 0x29d8 || c === 0x29d9 || c === 0x29da || c === 0x29db || c >= 0x29dc && c <= 0x29fb || c === 0x29fc || c === 0x29fd || c >= 0x29fe && c <= 0x2aff || c >= 0x2b00 && c <= 0x2b2f || c >= 0x2b30 && c <= 0x2b44 || c >= 0x2b45 && c <= 0x2b46 || c >= 0x2b47 && c <= 0x2b4c || c >= 0x2b4d && c <= 0x2b73 || c >= 0x2b74 && c <= 0x2b75 || c >= 0x2b76 && c <= 0x2b95 || c === 0x2b96 || c >= 0x2b97 && c <= 0x2bff || c >= 0x2e00 && c <= 0x2e01 || c === 0x2e02 || c === 0x2e03 || c === 0x2e04 || c === 0x2e05 || c >= 0x2e06 && c <= 0x2e08 || c === 0x2e09 || c === 0x2e0a || c === 0x2e0b || c === 0x2e0c || c === 0x2e0d || c >= 0x2e0e && c <= 0x2e16 || c === 0x2e17 || c >= 0x2e18 && c <= 0x2e19 || c === 0x2e1a || c === 0x2e1b || c === 0x2e1c || c === 0x2e1d || c >= 0x2e1e && c <= 0x2e1f || c === 0x2e20 || c === 0x2e21 || c === 0x2e22 || c === 0x2e23 || c === 0x2e24 || c === 0x2e25 || c === 0x2e26 || c === 0x2e27 || c === 0x2e28 || c === 0x2e29 || c >= 0x2e2a && c <= 0x2e2e || c === 0x2e2f || c >= 0x2e30 && c <= 0x2e39 || c >= 0x2e3a && c <= 0x2e3b || c >= 0x2e3c && c <= 0x2e3f || c === 0x2e40 || c === 0x2e41 || c === 0x2e42 || c >= 0x2e43 && c <= 0x2e4f || c >= 0x2e50 && c <= 0x2e51 || c === 0x2e52 || c >= 0x2e53 && c <= 0x2e7f || c >= 0x3001 && c <= 0x3003 || c === 0x3008 || c === 0x3009 || c === 0x300a || c === 0x300b || c === 0x300c || c === 0x300d || c === 0x300e || c === 0x300f || c === 0x3010 || c === 0x3011 || c >= 0x3012 && c <= 0x3013 || c === 0x3014 || c === 0x3015 || c === 0x3016 || c === 0x3017 || c === 0x3018 || c === 0x3019 || c === 0x301a || c === 0x301b || c === 0x301c || c === 0x301d || c >= 0x301e && c <= 0x301f || c === 0x3020 || c === 0x3030 || c === 0xfd3e || c === 0xfd3f || c >= 0xfe45 && c <= 0xfe46;\n}","map":{"version":3,"names":["ErrorKind","SKELETON_TYPE","TYPE","SPACE_SEPARATOR_REGEX","parseNumberSkeleton","parseNumberSkeletonFromString","parseDateTimeSkeleton","getBestPattern","SPACE_SEPARATOR_START_REGEX","RegExp","concat","source","SPACE_SEPARATOR_END_REGEX","createLocation","start","end","hasNativeStartsWith","String","prototype","startsWith","hasNativeFromCodePoint","fromCodePoint","hasNativeFromEntries","Object","fromEntries","hasNativeCodePointAt","codePointAt","hasTrimStart","trimStart","hasTrimEnd","trimEnd","hasNativeIsSafeInteger","Number","isSafeInteger","n","isFinite","Math","floor","abs","REGEX_SUPPORTS_U_AND_Y","re","RE","_a","exec","_","s","search","position","slice","length","codePoints","_i","arguments","elements","i","code","RangeError","fromCharCode","entries","obj","entries_1","k","v","index","size","undefined","first","charCodeAt","second","replace","flag","matchIdentifierAtIndex","IDENTIFIER_PREFIX_RE_1","lastIndex","match","c","_isWhiteSpace","_isPatternSyntax","push","apply","Parser","message","options","offset","line","column","ignoreTag","locale","requiresOtherClause","shouldParseSkeletons","parse","Error","parseMessage","nestingLevel","parentArgType","expectingCloseTag","isEOF","char","result","parseArgument","err","val","clonePosition","bump","type","pound","location","peek","error","UNMATCHED_CLOSING_TAG","_isAlpha","parseTag","parseLiteral","startPosition","tagName","parseTagName","bumpSpace","bumpIf","literal","value","childrenResult","children","endTagStartPosition","INVALID_TAG","closingTagNameStartPosition","closingTagName","tag","UNCLOSED_TAG","startOffset","_isPotentialElementNameChar","parseQuoteResult","tryParseQuote","parseUnquotedResult","tryParseUnquoted","parseLeftAngleResult","tryParseLeftAngleBracket","_isAlphaOrSlash","ch","openingBracePosition","EXPECT_ARGUMENT_CLOSING_BRACE","EMPTY_ARGUMENT","parseIdentifierIfPossible","MALFORMED_ARGUMENT","argument","parseArgumentOptions","startingPosition","endOffset","bumpTo","endPosition","typeStartPosition","argType","typeEndPosition","EXPECT_ARGUMENT_TYPE","styleAndLocation","styleStartPosition","parseSimpleArgStyleIfPossible","style","EXPECT_ARGUMENT_STYLE","styleLocation","argCloseResult","tryParseArgumentClose","location_1","skeleton","number","EXPECT_DATE_TIME_SKELETON","dateTimePattern","dateTime","pattern","parsedOptions","date","time","typeEndPosition_1","EXPECT_SELECT_ARGUMENT_OPTIONS","__assign","identifierAndLocation","pluralOffset","EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE","tryParseDecimalInteger","INVALID_PLURAL_ARGUMENT_OFFSET_VALUE","optionsResult","tryParsePluralOrSelectOptions","location_2","select","plural","pluralType","INVALID_ARGUMENT_TYPE","nestedBraces","apostrophePosition","bumpUntil","UNCLOSED_QUOTE_IN_ARGUMENT_STYLE","tokens","e","INVALID_NUMBER_SKELETON","expectCloseTag","parsedFirstIdentifier","hasOtherClause","parsedSelectors","Set","selector","selectorLocation","EXPECT_PLURAL_ARGUMENT_SELECTOR","INVALID_PLURAL_ARGUMENT_SELECTOR","has","DUPLICATE_SELECT_ARGUMENT_SELECTOR","DUPLICATE_PLURAL_ARGUMENT_SELECTOR","EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT","EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT","fragmentResult","add","EXPECT_SELECT_ARGUMENT_SELECTOR","MISSING_OTHER_CLAUSE","expectNumberError","invalidNumberError","sign","hasDigits","decimal","kind","prefix","currentOffset","indexOf","targetOffset","min","nextCode","codepoint"],"sources":["../parser.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}