{"ast":null,"code":"import { __extends } from \"tslib\";\nexport var ErrorCode;\n(function (ErrorCode) {\n  // When we have a placeholder but no value to format\n  ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n  // When value supplied is invalid\n  ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n  // When we need specific Intl API but it's not available\n  ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */function (_super) {\n  __extends(FormatError, _super);\n  function FormatError(msg, code, originalMessage) {\n    var _this = _super.call(this, msg) || this;\n    _this.code = code;\n    _this.originalMessage = originalMessage;\n    return _this;\n  }\n  FormatError.prototype.toString = function () {\n    return \"[formatjs Error: \".concat(this.code, \"] \").concat(this.message);\n  };\n  return FormatError;\n}(Error);\nexport { FormatError };\nvar InvalidValueError = /** @class */function (_super) {\n  __extends(InvalidValueError, _super);\n  function InvalidValueError(variableId, value, options, originalMessage) {\n    return _super.call(this, \"Invalid values for \\\"\".concat(variableId, \"\\\": \\\"\").concat(value, \"\\\". Options are \\\"\").concat(Object.keys(options).join('\", \"'), \"\\\"\"), ErrorCode.INVALID_VALUE, originalMessage) || this;\n  }\n  return InvalidValueError;\n}(FormatError);\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */function (_super) {\n  __extends(InvalidValueTypeError, _super);\n  function InvalidValueTypeError(value, type, originalMessage) {\n    return _super.call(this, \"Value for \\\"\".concat(value, \"\\\" must be of type \").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;\n  }\n  return InvalidValueTypeError;\n}(FormatError);\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */function (_super) {\n  __extends(MissingValueError, _super);\n  function MissingValueError(variableId, originalMessage) {\n    return _super.call(this, \"The intl string context variable \\\"\".concat(variableId, \"\\\" was not provided to the string \\\"\").concat(originalMessage, \"\\\"\"), ErrorCode.MISSING_VALUE, originalMessage) || this;\n  }\n  return MissingValueError;\n}(FormatError);\nexport { MissingValueError };","map":{"version":3,"names":["ErrorCode","FormatError","_super","__extends","msg","code","originalMessage","_this","call","prototype","toString","concat","message","Error","InvalidValueError","variableId","value","options","Object","keys","join","INVALID_VALUE","InvalidValueTypeError","type","MissingValueError","MISSING_VALUE"],"sources":["../../src/error.ts"],"sourcesContent":[null],"mappings":";AAAA,WAAYA,SAOX;AAPD,WAAYA,SAAS;EACnB;EACAA,SAAA,mCAA+B;EAC/B;EACAA,SAAA,mCAA+B;EAC/B;EACAA,SAAA,yCAAqC;AACvC,CAAC,EAPWA,SAAS,KAATA,SAAS;AASrB,IAAAC,WAAA,0BAAAC,MAAA;EAAiCC,SAAA,CAAAF,WAAA,EAAAC,MAAA;EAU/B,SAAAD,YAAYG,GAAW,EAAEC,IAAe,EAAEC,eAAwB;IAChE,IAAAC,KAAA,GAAAL,MAAK,CAAAM,IAAA,OAACJ,GAAG,CAAC;IACVG,KAAI,CAACF,IAAI,GAAGA,IAAI;IAChBE,KAAI,CAACD,eAAe,GAAGA,eAAe;;EACxC;EACOL,WAAA,CAAAQ,SAAA,CAAAC,QAAQ,GAAf;IACE,OAAO,oBAAAC,MAAA,CAAoB,IAAI,CAACN,IAAI,QAAAM,MAAA,CAAK,IAAI,CAACC,OAAO,CAAE;EACzD,CAAC;EACH,OAAAX,WAAC;AAAD,CAAC,CAlBgCY,KAAK;;AAoBtC,IAAAC,iBAAA,0BAAAZ,MAAA;EAAuCC,SAAA,CAAAW,iBAAA,EAAAZ,MAAA;EACrC,SAAAY,kBACEC,UAAkB,EAClBC,KAAU,EACVC,OAAiB,EACjBX,eAAwB;IAExB,OAAAJ,MAAK,CAAAM,IAAA,OACH,wBAAAG,MAAA,CAAuBI,UAAU,YAAAJ,MAAA,CAAOK,KAAK,wBAAAL,MAAA,CAAmBO,MAAM,CAACC,IAAI,CACzEF,OAAO,CACR,CAACG,IAAI,CAAC,MAAM,CAAC,OAAG,EACjBpB,SAAS,CAACqB,aAAa,EACvBf,eAAe,CAChB;EACH;EACF,OAAAQ,iBAAC;AAAD,CAAC,CAfsCb,WAAW;;AAiBlD,IAAAqB,qBAAA,0BAAApB,MAAA;EAA2CC,SAAA,CAAAmB,qBAAA,EAAApB,MAAA;EACzC,SAAAoB,sBAAYN,KAAU,EAAEO,IAAY,EAAEjB,eAAwB;IAC5D,OAAAJ,MAAK,CAAAM,IAAA,OACH,eAAAG,MAAA,CAAcK,KAAK,yBAAAL,MAAA,CAAqBY,IAAI,CAAE,EAC9CvB,SAAS,CAACqB,aAAa,EACvBf,eAAe,CAChB;EACH;EACF,OAAAgB,qBAAC;AAAD,CAAC,CAR0CrB,WAAW;;AAUtD,IAAAuB,iBAAA,0BAAAtB,MAAA;EAAuCC,SAAA,CAAAqB,iBAAA,EAAAtB,MAAA;EACrC,SAAAsB,kBAAYT,UAAkB,EAAET,eAAwB;IACtD,OAAAJ,MAAK,CAAAM,IAAA,OACH,sCAAAG,MAAA,CAAqCI,UAAU,0CAAAJ,MAAA,CAAqCL,eAAe,OAAG,EACtGN,SAAS,CAACyB,aAAa,EACvBnB,eAAe,CAChB;EACH;EACF,OAAAkB,iBAAC;AAAD,CAAC,CARsCvB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}